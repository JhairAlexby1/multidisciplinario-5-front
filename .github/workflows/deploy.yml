name: Deploy to EC2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Run linting
      run: npm run lint
      
    - name: Build application
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Create deployment package
      run: |
        mkdir -p deploy
        cp -r .next deploy/
        cp -r public deploy/
        cp package*.json deploy/
        cp next.config.mjs deploy/
        cp -r src deploy/
        cp ecosystem.config.js deploy/ || echo "ecosystem.config.js not found, skipping"
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        script: |
          # Navegar al directorio de la aplicación
          cd /var/www/multidisciplinario-5-front
          
          # Hacer backup de la versión actual
          sudo cp -r .next .next.backup.$(date +%Y%m%d_%H%M%S) || echo "No previous build found"
          
          # Detener la aplicación
          sudo pm2 stop multidisciplinario-app || echo "App not running"
          
          # Actualizar código desde Git
          sudo git pull origin main
          
          # Instalar dependencias
          sudo npm ci --production
          
          # Construir la aplicación
          sudo npm run build
          
          # Reiniciar la aplicación con PM2
          sudo pm2 start ecosystem.config.js || sudo pm2 restart multidisciplinario-app
          
          # Guardar configuración de PM2
          sudo pm2 save
          
          # Mostrar estado
          sudo pm2 status